// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// A1_eq_cpp
double A1_eq_cpp(arma::mat& mat);
RcppExport SEXP _hdrm_A1_eq_cpp(SEXP matSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat& >::type mat(matSEXP);
    rcpp_result_gen = Rcpp::wrap(A1_eq_cpp(mat));
    return rcpp_result_gen;
END_RCPP
}
// A2_eq_cpp
double A2_eq_cpp(arma::mat& mat);
RcppExport SEXP _hdrm_A2_eq_cpp(SEXP matSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat& >::type mat(matSEXP);
    rcpp_result_gen = Rcpp::wrap(A2_eq_cpp(mat));
    return rcpp_result_gen;
END_RCPP
}
// C1_eq_cpp
double C1_eq_cpp(arma::mat& mat);
RcppExport SEXP _hdrm_C1_eq_cpp(SEXP matSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat& >::type mat(matSEXP);
    rcpp_result_gen = Rcpp::wrap(C1_eq_cpp(mat));
    return rcpp_result_gen;
END_RCPP
}
// C1_star_eq_cpp
double C1_star_eq_cpp(arma::mat& mat, int B);
RcppExport SEXP _hdrm_C1_star_eq_cpp(SEXP matSEXP, SEXP BSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat& >::type mat(matSEXP);
    Rcpp::traits::input_parameter< int >::type B(BSEXP);
    rcpp_result_gen = Rcpp::wrap(C1_star_eq_cpp(mat, B));
    return rcpp_result_gen;
END_RCPP
}
// A1_cpp
double A1_cpp(arma::mat& mat);
RcppExport SEXP _hdrm_A1_cpp(SEXP matSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat& >::type mat(matSEXP);
    rcpp_result_gen = Rcpp::wrap(A1_cpp(mat));
    return rcpp_result_gen;
END_RCPP
}
// A3_cpp
double A3_cpp(arma::mat& mat, double Part6);
RcppExport SEXP _hdrm_A3_cpp(SEXP matSEXP, SEXP Part6SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat& >::type mat(matSEXP);
    Rcpp::traits::input_parameter< double >::type Part6(Part6SEXP);
    rcpp_result_gen = Rcpp::wrap(A3_cpp(mat, Part6));
    return rcpp_result_gen;
END_RCPP
}
// A1star_cpp
double A1star_cpp(const arma::mat& X, int& B);
RcppExport SEXP _hdrm_A1star_cpp(SEXP XSEXP, SEXP BSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::mat& >::type X(XSEXP);
    Rcpp::traits::input_parameter< int& >::type B(BSEXP);
    rcpp_result_gen = Rcpp::wrap(A1star_cpp(X, B));
    return rcpp_result_gen;
END_RCPP
}
// A2star_cpp
double A2star_cpp(const arma::mat& X, arma::mat& Y, int& B);
RcppExport SEXP _hdrm_A2star_cpp(SEXP XSEXP, SEXP YSEXP, SEXP BSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::mat& >::type X(XSEXP);
    Rcpp::traits::input_parameter< arma::mat& >::type Y(YSEXP);
    Rcpp::traits::input_parameter< int& >::type B(BSEXP);
    rcpp_result_gen = Rcpp::wrap(A2star_cpp(X, Y, B));
    return rcpp_result_gen;
END_RCPP
}
// A3star_cpp
double A3star_cpp(const arma::mat& X, int& B);
RcppExport SEXP _hdrm_A3star_cpp(SEXP XSEXP, SEXP BSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::mat& >::type X(XSEXP);
    Rcpp::traits::input_parameter< int& >::type B(BSEXP);
    rcpp_result_gen = Rcpp::wrap(A3star_cpp(X, B));
    return rcpp_result_gen;
END_RCPP
}
// C5star_cpp_internal
double C5star_cpp_internal(arma::mat& X, arma::vec& group, const int& B, arma::uvec& n);
RcppExport SEXP _hdrm_C5star_cpp_internal(SEXP XSEXP, SEXP groupSEXP, SEXP BSEXP, SEXP nSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat& >::type X(XSEXP);
    Rcpp::traits::input_parameter< arma::vec& >::type group(groupSEXP);
    Rcpp::traits::input_parameter< const int& >::type B(BSEXP);
    Rcpp::traits::input_parameter< arma::uvec& >::type n(nSEXP);
    rcpp_result_gen = Rcpp::wrap(C5star_cpp_internal(X, group, B, n));
    return rcpp_result_gen;
END_RCPP
}
// B0_cpp
double B0_cpp(arma::mat& mat);
RcppExport SEXP _hdrm_B0_cpp(SEXP matSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat& >::type mat(matSEXP);
    rcpp_result_gen = Rcpp::wrap(B0_cpp(mat));
    return rcpp_result_gen;
END_RCPP
}
// B2_cpp
double B2_cpp(arma::mat& mat);
RcppExport SEXP _hdrm_B2_cpp(SEXP matSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat& >::type mat(matSEXP);
    rcpp_result_gen = Rcpp::wrap(B2_cpp(mat));
    return rcpp_result_gen;
END_RCPP
}
// B3_cpp
double B3_cpp(arma::mat& mat);
RcppExport SEXP _hdrm_B3_cpp(SEXP matSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat& >::type mat(matSEXP);
    rcpp_result_gen = Rcpp::wrap(B3_cpp(mat));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_hdrm_A1_eq_cpp", (DL_FUNC) &_hdrm_A1_eq_cpp, 1},
    {"_hdrm_A2_eq_cpp", (DL_FUNC) &_hdrm_A2_eq_cpp, 1},
    {"_hdrm_C1_eq_cpp", (DL_FUNC) &_hdrm_C1_eq_cpp, 1},
    {"_hdrm_C1_star_eq_cpp", (DL_FUNC) &_hdrm_C1_star_eq_cpp, 2},
    {"_hdrm_A1_cpp", (DL_FUNC) &_hdrm_A1_cpp, 1},
    {"_hdrm_A3_cpp", (DL_FUNC) &_hdrm_A3_cpp, 2},
    {"_hdrm_A1star_cpp", (DL_FUNC) &_hdrm_A1star_cpp, 2},
    {"_hdrm_A2star_cpp", (DL_FUNC) &_hdrm_A2star_cpp, 3},
    {"_hdrm_A3star_cpp", (DL_FUNC) &_hdrm_A3star_cpp, 2},
    {"_hdrm_C5star_cpp_internal", (DL_FUNC) &_hdrm_C5star_cpp_internal, 4},
    {"_hdrm_B0_cpp", (DL_FUNC) &_hdrm_B0_cpp, 1},
    {"_hdrm_B2_cpp", (DL_FUNC) &_hdrm_B2_cpp, 1},
    {"_hdrm_B3_cpp", (DL_FUNC) &_hdrm_B3_cpp, 1},
    {NULL, NULL, 0}
};

RcppExport void R_init_hdrm(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
